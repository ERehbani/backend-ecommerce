paths:
  /api/users:
    get:
      summary: Retrieve users from the database
      tags:
        - Users
      responses:
        "200":
          description: All users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Internal server error
  /api/sessions:
    post:
      summary: Endpoint for user creation
      tags:
        - Users
      responses:
        "200":
          description: Successful registration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Register"
        "500":
          description: Registration failed
  /api/profile:
    get:
      summary: Endpoint to view the logged-in user
      tags:
        - Users
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CurrentUser"
  /api/reset-password-request:
    post:
      summary: Password reset request
      tags:
        - Password Reset
      requestBody:
        description: Required data to request a password reset
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email
      responses:
        "200":
          description: Password reset request successful
        "404":
          description: User not found
        "500":
          description: Error sending the email in the controller
  /api/reset-password:
    post:
      summary: Password reset
      tags:
        - Password Reset
      requestBody:
        description: Required data to reset the password
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email
                password:
                  type: string
                  description: New user password
                token:
                  type: string
                  description: Password reset token
      responses:
        "200":
          description: Password reset successful
        "404":
          description: User not found or invalid token
        "500":
          description: Error resetting the password in the controller
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: Auto-generated ID by MongoDB
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        password:
          type: string
          description: User's password hashed with bcrypt
        email:
          type: string
          description: User's email
        age:
          type: number
          description: User's age
        cart:
          type: string
          description: ID of the cart assigned to the user upon creation
        role:
          type: string
          description: Role assigned to the user
      example:
        _id: "12345678"
        first_name: Julian
        last_name: Alvarez
        password: 664b9a3a8761d1aef86ef6f9
        email: julian@gmail.com
        age: 21
        cart: "664b9a3a8761d1aef86ef6f9"
        role: user
    Register:
      type: object
      properties:
        _id:
          type: string
          description: Auto-generated ID by MongoDB
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        password:
          type: string
          description: User's password hashed with bcrypt
        email:
          type: string
          description: User's email
        age:
          type: number
          description: User's age
        cart:
          type: string
          description: ID of the cart assigned to the user upon creation
        role:
          type: string
          description: Role assigned to the user
      example:
        first_name: Julian
        last_name: Alvarez
        password: "1234"
        email: julian@gmail.com
        age: 21
    CurrentUser:
      type: object
      properties:
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        role:
          type: string
          description: Role assigned to the user
      example:
        first_name: Julian
        last_name: Alvarez
        role: user
